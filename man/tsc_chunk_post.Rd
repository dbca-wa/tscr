% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsc_chunk_post.R
\name{tsc_chunk_post}
\alias{tsc_chunk_post}
\title{POST data to a TSC API serializer in chunks}
\usage{
tsc_chunk_post(
  data,
  serializer,
  query = list(),
  chunksize = 1000,
  encode = "json",
  api_url = get_tsc_api_url(),
  api_token = get_tsc_api_token(),
  verbose = get_tsc_verbose()
)
}
\arguments{
\item{data}{Data to post to the serializer}

\item{serializer}{A TSC API serializer, e.g. "occ-taxon-point"}

\item{query}{An optional query for \code{tsc_POST},
default: \code{list()}.}

\item{chunksize}{The number of records to post at a time, default: 1000.}

\item{encode}{The parameter \code{encode} for \code{httr::POST}, default: "json".
Other options: \code{c("multipart", "form", "json", "raw")}.}

\item{api_url}{(character) The TSC API URL,
default \code{\link{get_tsc_api_url}}, see \code{\link{tsc_setup}}}

\item{api_token}{(character) The TSC API token,
default \code{\link{get_tsc_api_token}}, see \code{\link{tsc_setup}}}

\item{verbose}{Whether to show verbose messages.
Default: \code{\link{get_tsc_verbose}}.}
}
\value{
The \code{tsc_api_response} of the last batch of data.
}
\description{
POST data to a TSC API serializer in chunks
}
\examples{
\dontrun{
# chunk_post examples from ETL scripts
}
}
\seealso{
Other api: 
\code{\link{handle_http_status}()},
\code{\link{print.tsc_api_response}()},
\code{\link{tsc_GET}()},
\code{\link{tsc_POST}()},
\code{\link{tsc_occ_obs_post}()},
\code{\link{tsc_parse}()}
}
\concept{api}
