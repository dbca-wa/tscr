% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsc_GET.R
\name{tsc_GET}
\alias{tsc_GET}
\title{Return GeoJSON features from a TSC API endpoint}
\usage{
tsc_GET(
  serializer,
  query = list(),
  format = "json",
  max_records = NULL,
  chunk_size = 1000,
  api_url = get_tsc_api_url(),
  api_token = get_tsc_api_token(),
  verbose = get_tsc_verbose()
)
}
\arguments{
\item{serializer}{(character) TSC API serializer name (required)
Possible values see \code{https://tsc.dbca.wa.gov.au/api/1/}}

\item{query}{(list) A list of GET parameters, default: list().
The \code{format} is specified in a separate top-level param.}

\item{format}{(chr) The desired API output format, default: "json".}

\item{max_records}{(int) The maximum number of records retrieved.
If left at default (NULL), all records are returned.
Default: NULL.}

\item{chunk_size}{(int) The number of records to retrieve in each paginated
response. A specified but smaller \code{limit} will override
\code{chunk_size}.
Adjust \code{chunk_size} down if getting timeouts from the API.
Default: 1000.}

\item{api_url}{(character) The TSC API URL,
default \code{\link{get_tsc_api_url}}, see \code{\link{tsc_setup}}}

\item{api_token}{(character) The TSC API token,
default \code{\link{get_tsc_api_token}}, see \code{\link{tsc_setup}}}

\item{verbose}{Whether to show verbose messages.
Default: \code{\link{get_tsc_verbose}}.}
}
\value{
An S3 object of class 'tsc_api_response' containing:

features: The sent GeoJSON features

serializer: The called serializer, e.g. 'area'

response: The API HTTP response with all metadata
}
\description{
Call the TSC API serializer's list view with given GET
parameters, parse the response's features into a nested list.
This function requires the TSC API to return the results in a key
\code{features} (if GeoJSON) or \code{data} (if JSON).
}
\details{
\lifecycle{stable}
}
\examples{
\dontrun{
area_records <- tsc_GET("area")
}
}
\seealso{
Other api: 
\code{\link{handle_http_status}()},
\code{\link{print.tsc_api_response}()},
\code{\link{tsc_parse}()}
}
\concept{api}
