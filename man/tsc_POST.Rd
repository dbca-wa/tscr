% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsc_POST.R
\name{tsc_POST}
\alias{tsc_POST}
\title{Send a POST request to TSC's API}
\usage{
tsc_POST(
  data,
  serializer,
  query = list(format = "json"),
  encode = "json",
  api_url = get_tsc_api_url(),
  api_token = get_tsc_api_token(),
  verbose = get_tsc_verbose()
)
}
\arguments{
\item{data}{(JSON) A list of lists (JSON) to post to TSC.}

\item{serializer}{(character) TSC API serializer name (required)
Possible values see \code{https://tsc.dbca.wa.gov.au/api/1/}}

\item{query}{(list) A list of POST parameters,
default: \code{list(format="json")}.}

\item{encode}{The parameter \code{encode} for \verb{\link{httr::POST}},
default: "json".
Other options: \code{c("multipart", "form", "json", "raw")}.}

\item{api_url}{(character) The TSC API URL,
default \code{\link{get_tsc_api_url}}, see \code{\link{tsc_setup}}}

\item{api_token}{(character) The TSC API token,
default \code{\link{get_tsc_api_token}}, see \code{\link{tsc_setup}}}

\item{verbose}{Whether to show verbose messages.
Default: \code{\link{get_tsc_verbose}}.}
}
\value{
An S3 object of class 'tsc_api_response' containing:

data: The parsed response content

serializer: The called serializer, e.g. 'supra'

url: The called URL

date: The timestamp of the request

status_code: The HTTP status code of the request
}
\description{
\lifecycle{stable}
}
\examples{
\dontrun{
# One by one
gj <- "public:herbie_hbvnames_public" \%>\% kmi_getFeature()
props <- purrr::map(gj[["features"]], "properties")
tsc_POST(props[[1]], serializer = "names")

# All in batch
"public:herbie_hbvnames_public" \%>\%
  gs_getWFS() \%>\%
  upsert_geojson(serializer = "names", verbose = T)
}
}
\seealso{
Other api: 
\code{\link{handle_http_status}()},
\code{\link{print.tsc_api_response}()},
\code{\link{tsc_GET}()},
\code{\link{tsc_chunk_post}()},
\code{\link{tsc_parse}()}
}
\concept{api}
