% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsc_parse.R
\name{tsc_parse}
\alias{tsc_parse}
\title{Parse a \code{tsc_api_response} into a tibble}
\usage{
tsc_parse(tsc_api_response, payload = "data")
}
\arguments{
\item{tsc_api_response}{A \code{tsc_api_response} from TSC}

\item{payload}{(chr) The name of the key containing the parsed
\code{httr::content()} from the TSC API call}
}
\value{
A tibble with one row per record and columns corresponding to each
record's fields.
}
\description{
From a \code{tsc_api_response}, turn the key \code{payload}
(default: "features") into a \code{tibble:tibble}, and
\code{tidyr::unnest_wider} the tibble into columns equivalent to the fields
of the TSC API serializer.
If GeoJSON is found, the keys \code{geometry} (including \code{coordinates}) will
remain unchanged, but the key \code{properties} will be unnested.
}
\details{
\lifecycle{stable}
}
\seealso{
Other api: 
\code{\link{handle_http_status}()},
\code{\link{print.tsc_api_response}()},
\code{\link{tsc_GET}()},
\code{\link{tsc_POST}()},
\code{\link{tsc_chunk_post}()},
\code{\link{tsc_occ_obs_post}()}
}
\concept{api}
